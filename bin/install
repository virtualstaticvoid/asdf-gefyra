#!/usr/bin/env bash

set -e
set -o pipefail
# set -x

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_plugin() {
  local install_type=$1
  local version=$2
  local install_path=$3

  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $install_type $version)"
  local tmp_download_file=$(mktemp)

  mkdir -p "$bin_install_path"

  echo "Downloading gefyra from $download_url"
  curl -L -s "$download_url" -o "$tmp_download_file"
  unzip -qq "$tmp_download_file" -d "$bin_install_path" || exit 1
}

get_platform() {
  [ "Linux" = "$(uname)" ] && echo "linux" || echo "darwin"
}

get_arch() {
  local arch=$(uname -m)
  case $arch in
    amd64 | x86_64)
      echo "amd64"
      ;;
    # arm64)
    #   echo "arm64"
    #   ;;
    # i386 | i686)
    #   echo "386"
    #   ;;
    *)
      echo "--UNSUPPORTED-ARCHITECTURE--"
  esac
}

get_download_url() {
  local install_type=$1
  local tag=$2
  local version=$2

  local platform=$(get_platform)
  local arch=$(get_arch)

  echo "https://github.com/gefyrahq/gefyra/releases/download/${tag}/gefyra-${version}-${platform}-${arch}.zip"
}

install_plugin "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
